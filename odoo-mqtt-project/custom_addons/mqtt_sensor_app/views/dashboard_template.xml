<?xml version="1.0" encoding="UTF-8"?>
<odoo>
  <template id="dashboard_template" name="MQTT Dashboard">
    <t t-call="website.layout">
      <div class="container">
        <h1>MQTT Dashboard</h1>
        <p>Valor actual del sensor:</p>
        <h2 id="mqtt-value" style="color: green;">--</h2>

        <hr/>

        <h3>Histórico de cloro</h3>
        <canvas id="chlorineChart" width="400" height="200"></canvas>
      </div>

      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
     <script>
  let chart = null;

  function updateDashboard() {
    fetch('/mqtt_sensor/data', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({})  // ← Solución: enviar cuerpo vacío válido
    })
    .then(response => response.json())
    .then(data => {
      // Actualizar valor MQTT
      const mqttValue = data.mqtt_value ?? '--';
      document.getElementById('mqtt-value').textContent = mqttValue + ' ppm';

      // Actualizar gráfico
      if (chart) {
        chart.data.labels = data.labels;
        chart.data.datasets[0].data = data.values;
        chart.update();
      } else {
        const ctx = document.getElementById('chlorineChart').getContext('2d');
        chart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: data.labels,
            datasets: [{
              label: 'Cloro (ppm)',
              data: data.values,
              borderColor: 'blue',
              borderWidth: 2,
              fill: false
            }]
          },
          options: {
            responsive: true,
            scales: {
              y: {
                beginAtZero: true
              }
            }
          }
        });
      }
    })
    .catch(error => {
      console.error('Error al obtener datos del backend:', error);
    });
  }

  // Inicializar y actualizar cada 5s
  updateDashboard();
  setInterval(updateDashboard, 5000);
</script>

    </t>
  </template>
</odoo>
